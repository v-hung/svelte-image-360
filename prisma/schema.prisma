// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// admin
model Admin {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified DateTime?
  password      String
  name          String
  image         String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model GroupScene {
  id                    String  @id @default(uuid())
  name                  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  scenes Scene[]
}

model Scene {
  id                    String  @id @default(uuid())
  url                   String
  slug                  String @unique
  name                  String
  levels                String
  faceSize              Int
  initialViewParameters String
  audio                 String?
  description           String?
  sort Int?

  groupId String?
  group   GroupScene?  @relation(fields: [groupId], references: [id])

  infoHotspots InfoHotspots[]
  linkHotspots LinkHotspots[]
}

model InfoHotspots {
  id          String  @id @default(uuid())
  yaw         Float
  pitch       Float
  direction   String?
  title       String?
  description String?
  image       String?
  type        String?
  video       String?

  sceneId String
  scene   Scene  @relation(fields: [sceneId], references: [id])
}

model LinkHotspots {
  id        String @id @default(uuid())
  yaw       Float
  pitch     Float
  direction String?
  target    String
  type      String?

  sceneId String
  scene   Scene  @relation(fields: [sceneId], references: [id])
}

model GroupSetting {
  id        String @id @default(uuid())
  name      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  settings Setting[]
}

model Setting {
  id String @id @default(uuid())
  name    String @unique
  field   String
  details String?
  value String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  groupId String
  group   GroupSetting  @relation(fields: [groupId], references: [id])
}